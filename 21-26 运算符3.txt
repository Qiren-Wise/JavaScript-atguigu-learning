P22. 关系运算符
通过关系运算符可以比较两个值之间的大小关系，如果关系成立则返回true，反之返回false
'>' 判断左侧的值是否大于右侧
'>=' 判断左侧的值是否大于等于右侧
'<' 判断右侧的值是否大于右侧
'<=' 判断右侧的值是否大于等于右侧

非数值的情况
    - 它会先将其转换为数值，在进行比较
    - 任何值和Nan进行比较，都会返回false
    - 如果字符两侧都是字符串时，不会将其转换为数值进行比较，而回比较字符串中的Unicode编码。如 "11" < "5" 返回true
        # 比较字符编码时是一位一位进行比较，如 "abc" < "b" 返回true
        # 如果左右两位一样，则比较下一位。如 "bbc" < "b" 返回false

P23. Unicode编码表
详细Unicode编码表可以网上搜索使用
js中：
    - 如果想输出Unicode编码的值，需要用到转译字符'\u'
    - 使用方法如：console.log('\u0031')  控制台输出编码表中0031的值'1'
网页中：
    - 输出Unicode的值，可以用'&#'来转译，不过注意，这里的编码是十进制，而Unicode编码是十六进制，所以需要先转译成十进制
    - 使用方法如：<h1>&#9760</h1>   这里的9760相当于16进制的2620哦！

P24. 相等运算符
'==' 相等运算符用来比较两个值是否相等，是则返回true，反之返回false
    - 如果两侧值的类型不同，则会先进行类型转换，转换为数值型后，再进行比较
    - 'null == 0' 会返回false
    - undefined衍生自null，所以undefined和null做相等判断时，会返回true
    - NaN不和任何值相等，包括它本身
        # 要判断一个值是否等于NaN，可以通过isNaN()函数来判断，如果括号内的值时NaN，则返回true，反之返回false
'!=' 不相等运算符用来比较两个值是不否相等，是则返回true，反之返回false
    - 不相等运算也会对我们的值进行类型转换，所以'1' != 1 返回flase

'===' 全等运算用来判断两个值是否全等
    - 不会自动进行类型转换
    - 如果两个值类型不同，直接会返回false，如'1' === 1 返回false
    - null和undefined相等，但不全等

'!==' 不全等运算用来判断两个值是否不全等
    - 不会自动进行类型转换
    - 如果两个值类型不同，直接会返回true，与上面相反

P25. 条件运算符
条件运算符也叫三元运算符
语法：
    条件表达式?语句1:语句2;
    - 执行流程：
        1) 条件运算符在求值时，首先对条件表达式进行求值 
        2) 如果该值为true，则执行语句1，并返回执行结果
        3) 如果该值为false，则执行语句2，并返回执行结果
    - 案例1：
        var a = 10;
        var b = 20;
        max = a > b ? a:b;
            // 如果a大于b就吧a赋值给max，反之b赋值给max，这里max=20
    - 案例2：
        var a = 10;
        var b = 5;
        var c = 15;
        max = a > b ? a > c ? a : c : b > c ? b : c
            // 加上括号为：max = a > b ? (a > c ? a : c) : (b > c ? b : c)
            // 这里会比较abc三个数的值，然后把最大的赋值给max，这里max = 15
    如果条件表达式的求值结果是一个非布尔值，会先将其转换为布尔值，在进行运算

P26. 运算符的优先级
本章可看《网页制作案例教程》第232页-表8-12加深巩固
','运算符
    - 使用','号可以分割多个语句，一般在声明多个变量时使用
在JS中有一个运算优先级的表，在表中越靠上，优先级越高，越优先计算
    - 如果优先级一样，则从左往右运算
    - 优先级的表并不需要死记硬背，实际运用中，我们可以靠多次尝试来解决问题，或者通过加括号'()'来改变运算符顺序
ps. 附图例：运算符的优先级.png




 